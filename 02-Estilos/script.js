console.log("Holiwis a todos!")

/* 
Seleccionar el elemento h1 a trav√©s de su clase 
*/

const titulo = document.querySelector(".titulo");

/* 
Mostramos el nodo seleccionado  

-Nodo expandido -> <h1>...<h1>
-Nodo abstracto -> h1.title 

Algunos navegadores optimizan la representaci√≥n de los nodos en la consola. (ChromeüëΩ)
*/

console.log(titulo);

/* 
Objeto Style

Accedemos a el usuario la notaci√≥n del punto (.)

elemento.style

Resultado es CSS Style Declaration. Es una lista que representa todas las propiedades de estilo de un elemento.

√önicamente muestra el valor de los estilos en l√≠nea declarados directamente en el elemento HTML.
*/

console.log(titulo.style);

/* 
Propiedades de Estilo 

Accedemos a las propiedades usando la notaci√≥n de punto (.)

   elemento.style.nombrePropiedad 
   
A diferencia de CSS, las propiedades de estilo en JS las escribimos usando el formato camelCase.

  CSS -> background-color (keebab-case)
  JS -> backgroundColor (camelCase)
*/

console.log("Valores en linea. Color: " + titulo.style.color + " - Fondo: " + titulo.style.backgroundColor)

/* 
M√©todo de propiedad 

Asignar el valor de la propiedad de estilo en el elemento seleccionado.

    elemento.style.nombrePropiedad = "valor" 

 - Forma m√°s directa y legible de asignar propiedades.
 - Solo admite asignar propiedades con forma camelCase.
*/

let colorUsuario = prompt("Escribe un color üé®");
titulo.style.color = "purple";
titulo.style.backgroundColor = "yellow";

console.log("Valores asignados con JS. Color " + titulo.style.color + " - Fondo: " + titulo.style.backgroundColor);

/* 
M√©todo setProperty()

Asignamos una propiedad de estilo al elemento seleccionado.

   elemento.style.setProperty(nombrePropiedad, valor, important)

 - M√°s flexible y poderoso.
 - Las propiedades se escriban en formato kebab-case.
 - Parametro "important" es opcional.
*/

titulo.style.setProperty("color", "darkblue");
titulo.style.setProperty("background-Color", "lightpink", "important");
console.log("Valores asignados con setProperty. Color " + titulo.style.color + " - Fondo: " + titulo.style.backgroundColor);

/* 
Eliminar valores de propiedades

Usamos el m√©todo de propiedad y le definimos una cadena de texto vac√≠a.

   elemento.style.nombrePropiedad 

Esto elimina los valores previamente definidos en JS y en los estilos en l√≠nea. 
*/

titulo.style.color = "";
titulo.style.backgroundColor = "";

/* 
M√©todo removeProperty()

Elimina la propiedad de estilo. 

   elementostyle.removeProperty(nombreProperty)

-Las propiedades se pasan en formato kebab-case
*/

titulo.style.removeProperty("color");